
Vue.js 가 쓰이는 이유가 뭘까 ?
-  Vue는 자바스크립트의 프레임워크다 . 자바스크립트의 프레임워크란 HTML,CSS를 포함한 웹 관련 기능들을 포함하고 있으며 , 크게 웹 기능 구현을 위한 기능 모음과, 디자인 스타일에 대한 내용을 함께 담고있다. 프레임워크를 사용하게되면, 기존에 자바스크립트에서 사용할 수 없었던 문법이나, 입력방식들을 사용할 수 있게 되고,타 플러그인을 통해 UI 컴포넌트나 스타일, 추가기능 등을 불러다 쓰는 것도 가능해진다. 내가 느낀 가장 큰 장점은  접근성 및 학습력이 다른 프레임워크에 비해 확연하게 좋았다는거다.

 Vue의 특징
 1. 가상DOM을 활용한다.
 	-- 가상 DOM이란  ? 쉽게말해 브러우저의  렌더링을 위한  버퍼정도의 느낌이다. 브라우저는 DOM트리 CSS트리를 생성해 화면에 표출을한다. 여기서 생기는 문제 노드의 수가 몇천개가 된다고 가정하고,
 	수백번의 DOM 수정요청을 보낸다면  효율적인 렌더링이 이루어질수없다 . 가상DOM은  DOM 수정요청을 인지해 브라우저 대신  그 내용을 반영해 브라우저에게 전달한다.

 2. 재사용 가능한 컴포넌트 단위로 코딩을 합니다.

 3. 코어 라이브러리에만 집중하고 라우팅 및 전역상태를 관리하는 라이브러리가 있다.

 4. 뷰 레이어에 초점을 맞춘다.
 	-- Vue는 이름 그대로, 뷰 레이어에만 초점을 마추어 다른 라이브러리나 기존 프로젝트와 함께 사용하기 쉽다.

 5. Vue는 다른 프레임 워크와 다르게 한글문서를 제공하기떄문에 Vue.js를 익히는데 도움된다.
 	-- 익숙한 코드들과 한글화 문서떄문에 접근성이 다른 프레임워크에 비해 뛰어나다.


 설치페이지 및 링크 
<script src="https://cdn.jsdelivr.net/npm/vue"></script>

Vue 인스턴스 만들기 및 기본구조

ex) var vm = new Vue({
		el:'',
		data:{


		},
		methods:{


		}
	
})

적용예제1
<html>

<div id = 'ex_1' @click='click_ev'>     //@는  v-on 의 약어  @click == v-on:click
	<ul>
		<li class='item'>javascript</li>
		<li class='item'>angular.js</li>
		<li class='item'>Vue.js</li>
		<li class='item'>Bootstrap</li>
	</ul>
	<p> {{ result_message }}</p>
</div>

<script>
	var click_info = new Vue({  //변수명 click_info 로 Vue 인스턴스를 생성
		el:'#ex_1',             // 사용할 범위를 설정
		data:{
			result_message:'클릭전 메세지 내용입니다.' // 해당 변수명에 출력해줄 내용
		},
		methods:{
			click:function(e){  //클릭이벤트 발생시 
				this.result_message = '클릭한 내용은 '+e.target.innerHTML + ' 입니다.'  //이벤트가 일어난 내용을 출력
			}

		}

	})
</script>

